{"version":3,"sources":["api/api.js","components/Characters/Characters.jsx","components/Episodes/Episodes.jsx","components/Locations/Locations.jsx","components/WatchList/WatchList.jsx","components/MainNavigation/MainNavigation.jsx","components/HomePage/HomePage.jsx","App.jsx","index.jsx"],"names":["request","url","a","fetch","response","ok","console","log","statusText","json","result","Error","getCharacters","Characters","Route","list","params","enum","CharactersRoute","useState","pages","setPages","characters","setCharcters","useEffect","then","resolve","info","results","className","Pagination","inverted","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","map","person","flipOnHover","flipDirection","style","width","height","backgroundImage","image","backgroundSize","borderRadius","name","status","species","Episodes","EpisodesRoute","Locations","LocationsRoute","WatchList","WatchListRoute","MainNavigation","Menu","size","Item","link","to","HomePage","HomePageRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e1a6da4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nconst BASE_URL = 'https://rickandmortyapi.com/api/';\n\nconst request = async (url) => {\n  const response = await fetch(`${BASE_URL}${url}`);\n\n  try {\n    if (!response.ok) {\n      console.log(response.statusText);\n    }\n    const result = await response.json();\n\n    return result;\n  } catch {\n    throw new Error();\n  }\n};\n\nexport const getCharacters = () => request('character');\nexport const getLocations = () => request('location');\nexport const getEpisodes = () => request('episode');\n","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-hoc';\nimport { Pagination } from 'semantic-ui-react';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport { getCharacters } from '../../api/api';\nimport './Characters.scss';\n\nconst CharactersRoute = Route({\n  list: Route.params.enum('characters'),\n}, ({ list }) => `/${list}`);\n\nexport const Characters = CharactersRoute(() => {\n  const [pages, setPages] = useState({});\n  const [characters, setCharcters] = useState([]);\n\n  useEffect(() => {\n    getCharacters()\n      .then((resolve) => setPages(resolve.info));\n    getCharacters()\n      .then((resolve) => setCharcters(resolve.results));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"pagination\">\n        <Pagination\n          inverted\n          boundaryRange={0}\n          defaultActivePage={1}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={pages.pages}\n        />\n      </div>\n      <div className=\"card\">\n        {characters.map((person) => (\n          <Flippy\n            flipOnHover // default false\n            flipDirection=\"horizontal\" // horizontal or vertical\n            style={{ width: '200px', height: '200px' }}\n          >\n            <FrontSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p className=\"card__title\">\n                {person.name}\n              </p>\n            </FrontSide>\n            <BackSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p>\n                {`Status: ${person.status}, character is: ${person.species}`}\n              </p>\n            </BackSide>\n          </Flippy>\n        ))}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-hoc';\nimport { Pagination } from 'semantic-ui-react';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport { getCharacters } from '../../api/api';\n\nconst EpisodesRoute = Route({\n  list: Route.params.enum('episodes'),\n}, ({ list }) => `/${list}`);\n\nexport const Episodes = EpisodesRoute(() => {\n  const [pages, setPages] = useState({});\n  const [characters, setCharcters] = useState([]);\n\n  useEffect(() => {\n    getCharacters()\n      .then((resolve) => setPages(resolve.info));\n    getCharacters()\n      .then((resolve) => setCharcters(resolve.results));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"pagination\">\n        <Pagination\n          inverted\n          boundaryRange={0}\n          defaultActivePage={1}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={pages.pages}\n        />\n      </div>\n      <div className=\"card\">\n        {characters.map((person) => (\n          <Flippy\n            flipOnHover // default false\n            flipDirection=\"horizontal\" // horizontal or vertical\n            style={{ width: '200px', height: '200px' }}\n          >\n            <FrontSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p className=\"card__title\">\n                {person.name}\n              </p>\n            </FrontSide>\n            <BackSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p>\n                {`Status: ${person.status}, character is: ${person.species}`}\n              </p>\n            </BackSide>\n          </Flippy>\n        ))}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-hoc';\nimport { Pagination } from 'semantic-ui-react';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport { getCharacters } from '../../api/api';\n\nconst LocationsRoute = Route({\n  list: Route.params.enum('locations'),\n}, ({ list }) => `/${list}`);\n\nexport const Locations = LocationsRoute(() => {\n  const [pages, setPages] = useState({});\n  const [characters, setCharcters] = useState([]);\n\n  useEffect(() => {\n    getCharacters()\n      .then((resolve) => setPages(resolve.info));\n    getCharacters()\n      .then((resolve) => setCharcters(resolve.results));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"pagination\">\n        <Pagination\n          inverted\n          boundaryRange={0}\n          defaultActivePage={1}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={pages.pages}\n        />\n      </div>\n      <div className=\"card\">\n        {characters.map((person) => (\n          <Flippy\n            flipOnHover // default false\n            flipDirection=\"horizontal\" // horizontal or vertical\n            style={{ width: '200px', height: '200px' }}\n          >\n            <FrontSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p className=\"card__title\">\n                {person.name}\n              </p>\n            </FrontSide>\n            <BackSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p>\n                {`Status: ${person.status}, character is: ${person.species}`}\n              </p>\n            </BackSide>\n          </Flippy>\n        ))}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-hoc';\nimport { Pagination } from 'semantic-ui-react';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport { getCharacters } from '../../api/api';\n\nconst WatchListRoute = Route({\n  list: Route.params.enum('watchList'),\n}, ({ list }) => `/${list}`);\n\nexport const WatchList = WatchListRoute(() => {\n  const [pages, setPages] = useState({});\n  const [characters, setCharcters] = useState([]);\n\n  useEffect(() => {\n    getCharacters()\n      .then((resolve) => setPages(resolve.info));\n    getCharacters()\n      .then((resolve) => setCharcters(resolve.results));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"pagination\">\n        <Pagination\n          inverted\n          boundaryRange={0}\n          defaultActivePage={1}\n          ellipsisItem={null}\n          firstItem={null}\n          lastItem={null}\n          siblingRange={1}\n          totalPages={pages.pages}\n        />\n      </div>\n      <div className=\"card\">\n        {characters.map((person) => (\n          <Flippy\n            flipOnHover // default false\n            flipDirection=\"horizontal\" // horizontal or vertical\n            style={{ width: '200px', height: '200px' }}\n          >\n            <FrontSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p className=\"card__title\">\n                {person.name}\n              </p>\n            </FrontSide>\n            <BackSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p>\n                {`Status: ${person.status}, character is: ${person.species}`}\n              </p>\n            </BackSide>\n          </Flippy>\n        ))}\n      </div>\n    </div>\n  );\n});\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport { Characters } from '../Characters';\nimport { Episodes } from '../Episodes';\nimport { Locations } from '../Locations';\nimport { WatchList } from '../WatchList';\nimport './MainNavigation.scss';\n\nexport const MainNavigation = () => (\n  <Menu inverted size=\"big\">\n    <Menu.Item link>\n      <Link to={Characters.link({ list: 'characters' })}>\n        Characters\n      </Link>\n    </Menu.Item>\n    <Menu.Item link>\n      <Link to={Episodes.link({ list: 'episodes' })}>\n        Episodes\n      </Link>\n    </Menu.Item>\n    <Menu.Item link>\n      <Link to={Locations.link({ list: 'locations' })}>\n        Locations\n      </Link>\n    </Menu.Item>\n    <Menu.Item link>\n      <Link to={WatchList.link({ list: 'watchList' })}>\n        My watch list\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n","import React from 'react';\nimport { Route } from 'react-router-hoc';\nimport './HomePage.scss';\n\nconst HomePageRoute = Route({\n  list: Route.params.enum('home'),\n}, ({ list }) => `/${list}`);\n\nexport const HomePage = HomePageRoute(() => (\n  <div className=\"home\">\n    <h1>\n      Hello\n    </h1>\n  </div>\n));\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { MainNavigation } from './components/MainNavigation';\nimport { Characters } from './components/Characters';\nimport { Episodes } from './components/Episodes';\nimport { Locations } from './components/Locations';\nimport { WatchList } from './components/WatchList';\nimport { HomePage } from './components/HomePage';\nimport './App.scss';\n\nfunction App() {\n  console.log('hi');\n  return (\n    <div className=\"App\">\n      <MainNavigation />\n      <Switch>\n        <HomePage />\n        <Characters />\n        <Episodes />\n        <Locations />\n        <WatchList />\n\n        <Redirect to={HomePage.link({ list: 'home' })} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}