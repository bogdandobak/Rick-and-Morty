{"version":3,"sources":["api/api.js","components/Characters/Characters.jsx","components/Episodes/Episodes.jsx","components/Locations/Locations.jsx","components/WatchInput/WatchInput.jsx","components/WachItem/WatchItem.jsx","components/WatchList/WatchList.jsx","components/Watch/Watch.jsx","helpers/useLocalStorage.jsx","components/MainNavigation/MainNavigation.jsx","components/HomePage/HomePage.jsx","App.jsx","index.jsx"],"names":["request","url","a","fetch","response","ok","console","log","statusText","json","result","Error","Characters","Route","list","params","enum","CharactersRoute","useState","characters","setCharcters","useEffect","then","resolve","results","className","map","person","flipOnHover","flipDirection","style","width","height","backgroundImage","image","backgroundSize","borderRadius","name","status","species","Episodes","EpisodesRoute","episodes","setEpisodes","Table","celled","inverted","selectable","Header","Row","HeaderCell","Body","episode","Cell","air_date","id","Locations","LocationsRoute","locations","setLocations","location","type","dimension","WatchInput","onCreate","inputQuery","setInputQuery","hadnleTitle","useCallback","event","value","target","handleSubmit","key","Input","size","placeholder","onChange","onKeyDown","WatchItem","item","onRemove","onComplete","cN","completed","readOnly","checked","onClick","title","WatchList","watchData","Watch","WatchRoute","initialValue","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","setWatchData","prevWatchData","uniqid","newWatchData","filter","MainNavigation","Menu","secondary","Item","link","to","HomePage","HomePageRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c74a849f.chunk.js","sourcesContent":["/* eslint-disable no-console */\nconst BASE_URL = 'https://rickandmortyapi.com/api/';\n\nconst request = async (url) => {\n  const response = await fetch(`${BASE_URL}${url}`);\n\n  try {\n    if (!response.ok) {\n      console.log(response.statusText);\n    }\n    const result = await response.json();\n\n    return result;\n  } catch {\n    throw new Error();\n  }\n};\n\nexport const getCharacters = () => request('character');\nexport const getLocations = () => request('location');\nexport const getEpisodes = () => request('episode');\n","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-hoc';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport { getCharacters } from '../../api/api';\nimport './Characters.scss';\n\nconst CharactersRoute = Route({\n  list: Route.params.enum('characters'),\n}, ({ list }) => `/${list}`);\n\nexport const Characters = CharactersRoute(() => {\n  const [characters, setCharcters] = useState([]);\n\n  useEffect(() => {\n    getCharacters()\n      .then((resolve) => setCharcters(resolve.results));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"card\">\n        {characters.map((person) => (\n          <Flippy\n            flipOnHover // default false\n            flipDirection=\"horizontal\" // horizontal or vertical\n            style={{ width: '200px', height: '200px' }}\n          >\n            <FrontSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p className=\"card__title\">\n                {person.name}\n              </p>\n            </FrontSide>\n            <BackSide\n              style={{\n                backgroundImage: `url(${person.image})`,\n                backgroundSize: 'contain',\n                borderRadius: '20px',\n              }}\n            >\n              <p className=\"card__info\">\n                {`Status: ${person.status}, character is: ${person.species}`}\n              </p>\n            </BackSide>\n          </Flippy>\n        ))}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-hoc';\nimport { Table } from 'semantic-ui-react';\nimport { getEpisodes } from '../../api/api';\nimport '../container.scss';\n\nconst EpisodesRoute = Route({\n  list: Route.params.enum('episodes'),\n}, ({ list }) => `/${list}`);\n\nexport const Episodes = EpisodesRoute(() => {\n  /* const [pages, setPages] = useState({}); */\n  const [episodes, setEpisodes] = useState([]);\n\n  useEffect(() => {\n    /* getEpisodes()\n      .then((resolve) => setPages(resolve.info)); */\n    getEpisodes()\n      .then((resolve) => setEpisodes(resolve.results));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Table celled inverted selectable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Air date</Table.HeaderCell>\n            <Table.HeaderCell>Episode</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {episodes.map((episode) => (\n            <Table.Row key={episode.id}>\n              <Table.Cell>{episode.name}</Table.Cell>\n              <Table.Cell>{episode.air_date}</Table.Cell>\n              <Table.Cell>{episode.episode}</Table.Cell>\n            </Table.Row>\n          ))}\n\n        </Table.Body>\n      </Table>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-hoc';\nimport { Table } from 'semantic-ui-react';\nimport { getLocations } from '../../api/api';\nimport '../container.scss';\n\nconst LocationsRoute = Route({\n  list: Route.params.enum('locations'),\n}, ({ list }) => `/${list}`);\n\nexport const Locations = LocationsRoute(() => {\n  /* const [pages, setPages] = useState({}); */\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    /* getLocations()\n      .then((resolve) => setPages(resolve.info)); */\n    getLocations()\n      .then((resolve) => setLocations(resolve.results));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Table celled inverted selectable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Dimension</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {locations.map((location) => (\n            <Table.Row key={location.id}>\n              <Table.Cell>{location.name}</Table.Cell>\n              <Table.Cell>{location.type}</Table.Cell>\n              <Table.Cell>{location.dimension}</Table.Cell>\n            </Table.Row>\n          ))}\n\n        </Table.Body>\n      </Table>\n    </div>\n  );\n});\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\n\nexport const WatchInput = ({ onCreate }) => {\n  const [inputQuery, setInputQuery] = useState('');\n\n  const hadnleTitle = useCallback(\n    (event) => {\n      const { value } = event.target;\n\n      setInputQuery(value);\n    }, [],\n  );\n\n  const handleSubmit = useCallback(\n    (event) => {\n      if (event.key === 'Enter' && inputQuery) {\n        onCreate(inputQuery);\n        setInputQuery('');\n      }\n    }, [inputQuery],\n  );\n\n  return (\n    <div className=\"watch__header\">\n      <h1 className=\"watch__title\">\n        My Watch List\n      </h1>\n      <Input\n        size=\"huge\"\n        type=\"text\"\n        placeholder=\"What to see next?\"\n        value={inputQuery}\n        onChange={hadnleTitle}\n        onKeyDown={handleSubmit}\n      />\n    </div>\n  );\n};\n\nWatchInput.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cN from 'classnames';\n\nexport const WatchItem = ({ item, onRemove, onComplete }) => (\n  <li className={cN('watch-list__item', {\n    'watch-list__item--completed': item.completed,\n  })}\n  >\n    <div>\n      <input\n        type=\"checkbox\"\n        readOnly\n        className=\"watch-list__toggle\"\n        checked={item.completed}\n        onClick={() => onComplete(item.id)}\n      />\n      <span className=\"watch-list__title\">\n        {item.title}\n      </span>\n      <button\n        type=\"button\"\n        className=\"watch-list__destroy\"\n        onClick={() => onRemove(item.id)}\n      />\n    </div>\n  </li>\n);\n\nWatchItem.propTypes = {\n  item: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onComplete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { WatchItem } from '../WachItem';\nimport './WatchList.scss';\n\nexport const WatchList = ({\n  watchData,\n  onRemove,\n  onComplete,\n}) => (\n  <ul className=\"watch-list\">\n    {watchData.map((item) => (\n      <WatchItem\n        key={item.id}\n        item={item}\n        onComplete={onComplete}\n        onRemove={onRemove}\n      />\n    ))}\n  </ul>\n);\n\nWatchList.propTypes = {\n  watchData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onComplete: PropTypes.func.isRequired,\n};\n","import React, { useCallback } from 'react';\nimport { Route } from 'react-router-hoc';\nimport uniqid from 'uniqid';\nimport { useLocalStorage } from '../../helpers';\nimport { WatchInput } from '../WatchInput';\nimport { WatchList } from '../WatchList';\nimport '../HomePage/HomePage.scss';\nimport './Watch.scss';\n\nconst WatchRoute = Route({\n  list: Route.params.enum('watch'),\n}, ({ list }) => `/${list}`);\n\nexport const Watch = WatchRoute(() => {\n  const [watchData, setWatchData] = useLocalStorage('watchData', []);\n\n  const onCreate = useCallback(\n    (title) => {\n      setWatchData((prevWatchData) => [...prevWatchData, {\n        completed: false,\n        title,\n        id: uniqid(),\n      }]);\n    },\n  );\n\n  const onComplete = useCallback(\n    (id) => {\n      const newWatchData = watchData.map((item) => (item.id === id ? ({\n        ...item,\n        completed: !item.completed,\n      })\n        : item));\n\n      setWatchData(newWatchData);\n    }, [watchData],\n  );\n\n  const onRemove = useCallback(\n    (id) => {\n      const newWatchData = watchData.filter((item) => item.id !== id);\n\n      setWatchData(newWatchData);\n    }, [watchData],\n  );\n\n  return (\n    <section className=\"watch\">\n      <WatchInput onCreate={onCreate} />\n      <WatchList\n        watchData={watchData}\n        onComplete={onComplete}\n        onRemove={onRemove}\n      />\n    </section>\n  );\n});\n","import { useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport { Characters } from '../Characters';\nimport { Episodes } from '../Episodes';\nimport { Locations } from '../Locations';\nimport { Watch } from '../Watch';\nimport './MainNavigation.scss';\n\nexport const MainNavigation = () => (\n  <Menu secondary inverted size=\"large\">\n    <Menu.Item link>\n      <Link to={Characters.link({ list: 'characters' })}>\n        Characters\n      </Link>\n    </Menu.Item>\n    <Menu.Item link>\n      <Link to={Episodes.link({ list: 'episodes' })}>\n        Episodes\n      </Link>\n    </Menu.Item>\n    <Menu.Item link>\n      <Link to={Locations.link({ list: 'locations' })}>\n        Locations\n      </Link>\n    </Menu.Item>\n    <Menu.Item link>\n      <Link to={Watch.link({ list: 'watch' })}>\n        My watch list\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n","import React from 'react';\nimport { Route } from 'react-router-hoc';\nimport './HomePage.scss';\n\nconst HomePageRoute = Route({\n  list: Route.params.enum('home'),\n}, ({ list }) => `/${list}`);\n\nexport const HomePage = HomePageRoute(() => (\n  <div className=\"home\">\n    <h1>\n      Hello\n    </h1>\n  </div>\n));\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { MainNavigation } from './components/MainNavigation';\nimport { Characters } from './components/Characters';\nimport { Episodes } from './components/Episodes';\nimport { Locations } from './components/Locations';\nimport { Watch } from './components/Watch';\nimport { HomePage } from './components/HomePage';\nimport './App.scss';\n\nfunction App() {\n  console.log('hi');\n  return (\n    <div className=\"App\">\n      <MainNavigation />\n      <Switch>\n        <HomePage />\n        <Characters />\n        <Episodes />\n        <Locations />\n        <Watch />\n        <Redirect to={HomePage.link({ list: 'home' })} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}